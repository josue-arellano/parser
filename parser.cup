import java_cup.runtime.*;

/* Preliminaries to set up and use the scanner.  */
init with {: scanner.init();              :};
scan with {: return scanner.next_token(); :};

/* Terminals (tokens returned by the scanner). */
terminal            SEMI, PLUS, MINUS, TIMES, DIVIDE, MOD;
terminal            UMINUS, LPAREN, RPAREN;
terminal Integer    NUMBER;

/* Non terminals */
non terminal            Program, Decl, VariableDecl, FunctionDecl;
non terminal            ClassDecl, InterfaceDecl, Variable, Type;
non terminal            FunctionDecl, Formals, ClassDecl, Field;
non terminal            InterfaceDecl, Prototype, StmtBlock, Stmt;
non terminal            IfStmt, WhileStmt, ForStmt, BreakStmt;
non terminal            ReturnStmt, PrintStmt, Expr;
non terminal Integer    expr, term, factor;

/* Precedences */
precedence left PLUS, MINUS;
precedence left TIMES, DIVIDE, MOD;
precedence left UMINUS;

/* The grammar */
expr_list ::= expr_list expr_part | 
              expr_part;
expr_part ::= expr SEMI;
expr      ::= expr PLUS expr 
            | expr MINUS expr  
            | expr TIMES expr  
            | expr DIVIDE expr  
            | expr MOD expr 
	    | MINUS expr %prec UMINUS
            | LPAREN expr RPAREN
	    | NUMBER
	    ;
Program         ::= Decl+
Decl            ::= VariableDecl 
                    | FunctionDecl 
                    | ClassDecl 
                    | InterfaceDecl
VariableDecl    ::= Variable _semicolon
Variable        ::= Type _id
Type            ::= _int 
                    | _double 
                    | _boolean
                    | _string 
                    | Type _leftbrace _rightbrace 
                    | _id
FunctionDecl    ::= Type _id _leftparen Formals _rightparen StmtBlock
                    | _void _id _leftparen Formals _rightparen StmtBlock
Formals         ::= Variable+, | e_production
ClassDecl       ::= _class _id _less _extends _id _greater _less _implements _id+, _greater _leftbracket Field* _rightbracket
Field           ::= VariableDecl
                    | FunctionDecl
InterfaceDecl   ::= _interface _id _leftbracket Prototype* _rightbracket
Prototype       ::= Type _id _leftparen Formals _rightparen;
                    | _void _id _leftparen Formals _rightparen;
StmtBlock       ::= _leftbracket VariableDecl* Stmt* _rightbracket
Stmt            ::= _less Expr _greater;
                    | IfStmt
                    | WhileStmt
                    | ForStmt
                    | BreakStmt
                    | ReturnStmt
                    | PrintStmt
                    | StmtBlock 
IfStmt          ::= _if _leftparen Expr _rightparen Stmt _less _else Stmt _greater
WhileStmt       ::= _while _leftparen Expr _rightparen Stmt
ForStmt         ::= _for _leftparen _less Expr _greater _semicolon Expr _semicolon _less Expr _greater _rightparen Stmt
BreakStmt       ::= _break _semicolon
ReturnStmt      ::= _return _less Expr _greater _semicolon
PrintStmt       ::= _println _rightparen Expr+ _commma _leftparen_semicolon
Expr            ::= Lvalue _equal Expr
                    | Constant
                    | Lvalue
                    | Call
                    | _rightparen Expr _leftparen 
                    | Expr _plus Expr
                    | Expr _minus Expr
                    | Expr _multiplication Expr
                    | Expr _division Expr
                    | Expr _mod Expr
                    | _minus Expr
                    | Expr _less Expr
                    | Expr _lessequal Expr
                    | Expr _greater Expr
                    | Expr _greaterequal Expr
                    | Expr _equal Expr
                    | Expr _notequal Expr
                    | Expr _and Expr
                    | Expr _or Expr
                    | _not Expr _readln _leftparen _rightparen
                    | _new _leftparen _id _rightparen
                    | newarray _leftparen _intconstant _comma Type _rightparen
Lvalue          ::= _id
                    | Lvalue _leftbrace Expr _rightbrace 
                    | Lvalue _period _id
Call            ::= _id _leftparen Actuals _rightparen
                    | -id _period _id _rightparen Actuals _leftparen
Actuals         ::= Expr+ _comma | e_production
Constant        ::= intconstant 
                    | doubleconstant 
                    | stringconstant 
                    | booleanconstant
                    | null